set :application, "TeiRails"
set :repository,  "set your repository location here"

# If you aren't deploying to /u/apps/#{application} on the target
# servers (which is the default), you can specify the actual location
# via the :deploy_to variable:
set :deploy_to, "/var/projects/#{application}"

# If you aren't using Subversion to manage your source code, specify
# your SCM below:
set :scm, :git
set :user, 'justin'

set :use_sudo, false

set :repository, "git://git.hcoop.net/git/leitgebj/tei-rails.git"

role :app, "teirails"
role :web, "teirails"
role :db,  "teirails", :primary => true

set :shared_data_dir, "#{deploy_to}/#{shared_dir}/data"

set :git_enable_submodules, 1
set :git_shallow_clone, 1

task :after_setup, :roles => [:web] do
  run "mkdir -m775 #{shared_data_dir}" unless File.directory? shared_data_dir
  run "mkdir -m775 #{shared_data_dir}/audio_files" unless File.directory? shared_data_dir
  run "mkdir -m775 #{shared_data_dir}/images" unless File.directory? shared_data_dir
end

task :after_deploy, :roles => [:web] do
  run "cd #{release_path} && ln -s #{shared_data_dir} data"
  
  put(File.read('/home/justin/Code/teirails_casares_deploy/' + 
                'exception_notifier_configuration.rb'), 
      "#{release_path}/config/exception_notifier_configuration.rb", 
      :mode => 0644)
end

task :after_update_code, :roles => :app do
  put(File.read('/home/justin/Code/teirails_casares_deploy/database.yml'), 
      "#{release_path}/config/database.yml", :mode => 0444)

  put(File.read('/home/justin/Code/teirails_casares_deploy/spin'), 
      "#{release_path}/script/spin", :mode => 0755)

  put(File.read('/home/justin/Code/teirails_casares_deploy/' + 
                'exception_notifier_configuration.rb'), 
      "#{release_path}/config/exception_notifier_configuration.rb", 
      :mode => 0644)

end

set :mongrel_pid_file, "#{current_path}/tmp/pids/mongrel.pid"

deploy.task :restart, :roles => :app do
  deploy.stop
  deploy.start
end

deploy.task :stop, :roles => :app do
  run "cd #{current_path} && mongrel_rails stop -P #{mongrel_pid_file}"
end

deploy.task :start, :roles => :app do
  run "cd #{current_path} && mongrel_rails start -e production -d -p 4004 -P #{mongrel_pid_file}"
end
